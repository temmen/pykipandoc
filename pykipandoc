#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# pykipandoc — xml-rpc-based ikiwiki plugin to process Pandoc files
#
# based on rst by martin f. krafft <madduck@madduck.net>
# Released under the terms of the GNU GPL version 2
#
__name__ = 'pandoc'
__description__ = 'xml-rpc-based ikiwiki plugin to process Pandoc\'s Markdown files'
__version__ = '0.1'
__author__ = 'Temistocle M. Mineo <temmenel@gmail.com>'
__copyright__ = 'Copyright © ' + __author__
__licence__ = 'GPLv2'

from proxy import IkiWikiProcedureProxy
from subprocess import Popen, PIPE, STDOUT

import sys # da spostare dentro debug().

def _to_dict(args):
    return dict((k, v) for k, v in zip(*[iter(args)]*2))

def pandoc(proxy, *args):
    kwargs = _to_dict(args)
#    sys.stderr.write(kwargs["content"].encode('utf-8'))
    pid = Popen(
         ["/usr/bin/pandoc",
          "--smart",
          "--number-sections",
          "--id-prefix",
          "-t html",
         ],
         stdin=PIPE,
         stdout=PIPE,
         stderr=STDOUT
         )
    try:
        cntn = unicode(kwargs["content"], 'utf-8')
    except TypeError:
        cntn = kwargs["content"]
    return pid.communicate(input=cntn.encode('utf-8'))[0] # BUG? http://old.nabble.com/Bug-373203%3A-ikiwiki%3A-utf8-not-handled-in-image-titles-td4848774.html
    
    

def getsetup(proxy, *kwargs):
     return 'plugin', { 'safe' : 1, 'rebuild' : 1 }


def debug(s):
    sys.stderr.write(__name__ + ':DEBUG:%s\n' % s)
    sys.stderr.flush()

proxy = IkiWikiProcedureProxy(__name__, debug_fn=None)
proxy.hook('getsetup', getsetup)
proxy.hook('htmlize', pandoc, id="mdwn")
proxy.run()
